@using Kendo.Mvc.UI
@using TelerikPerformanceDemo.Models

<html>
<head>
    <link href="~/lib/kendo/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="~/lib/kendo/styles/kendo.common.core.min.css" rel="stylesheet" />
    <link href="~/lib/kendo/styles/kendo.bootstrap.min.css" rel="stylesheet" />
    <link href="~/lib/kendo/styles/kendo.common-bootstrap.core.min.css" rel="stylesheet" />
    <link href="~/lib/kendo/styles/kendo.common-bootstrap.min.css" rel="stylesheet" />
    <link href="~/lib/bootstrap/css/bootstrap.css" rel="stylesheet" />

    <script src="~/lib/jquery/jquery-3.1.1.js"></script>

    <script src="~/lib/kendo/js/kendo.web.js"></script>
    <script src="~/lib/kendo/js/kendo.aspnetmvc.min.js"></script>
    <script src="~/js/grille.js"></script>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <h1>Telerik Performance Demo</h1>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h3>Click over the checkbox to switch between the default and custom behavior for loading data</h3>
            </div>
        </div>
        <div class="row">
            <div class="col-md-1">
                <span>Current behavior:</span>
            </div>
            <div class="col-md-2">
                <input id="Custom" type="checkbox" value="false" />
                <label>Custom</label>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @{
                    var clientGroupHeaderTemplate = "# #:value# (#=count#)# #";
                }
                <script>
                    var counter = 1;
                    function onDataBound(e) {
                        counter = 1;
                    }
                    function renderNumber(data) {
                        return counter++;
                    }
                </script>

                @(Html.Kendo().Grid<OrderDetailViewModel>
                    ()
                    .Name("Grid")
                    .Columns(columns =>
                    {
                        columns.Bound(c => c.OrderDetailID).Width("50px").ClientTemplate("#= renderNumber(data) #").Title("#");
                        columns.Bound(c => c.OrderDetailID);
                        columns.Bound(c => c.AccountNumber);
                        columns.Bound(c => c.OrderDate).Format("{0:dd/MM/yyyy}").Groupable(true).ClientGroupHeaderTemplate("#=kendo.toString(kendo.parseDate(value), 'dd/MM/yyyy')# (#=count#)");
                        columns.Bound(c => c.ProductName);
                        columns.Bound(c => c.OrderTrackingNumber).Groupable(true);
                        columns.Bound(c => c.OrderQty).Groupable(true).Sortable(true).ClientGroupHeaderTemplate("Order qty: #=value#  (Total : #=count#)");;
                        columns.Bound(c => c.UnitPrice).Groupable(false).Sortable(false).Format("{0:c}");
                        columns.Bound(c => c.LineTotal).Groupable(false).Sortable(false).Format("{0:c}");
                    })
                        .Events(ev => ev.DataBound("onDataBound"))
                        .Scrollable(scrollable => scrollable.Enabled(true))
                        .Sortable(sortable => sortable.AllowUnsort(true))
                        .Groupable()
                        .Reorderable(r => r.Columns(true))
                        .Resizable(rsb => rsb.Columns(true))
                        .AutoBind(false)
                        .Pageable(pageable => pageable
                        .AlwaysVisible(true)
                        .Refresh(true)
                        .PageSizes(new[] { 25, 100, 1000 })
                        .ButtonCount(5)
                        .PreviousNext(true)
                        )
                        .ColumnMenu(true)
                        .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .Events(a => a.Error("Grille.ErreurDataSource")
                                                    .RequestStart("Grille.requestStart")
                                                    .RequestEnd("Grille.requestEnd"))
                            .Group(groups =>
                            {
                                
                                groups.Add(p => p.OrderQty);
                                groups.Add(p => p.OrderDate);
                                groups.Add(p => p.OrderTrackingNumber);
                            })
                            .Aggregates(aggregates =>
                            {
                                aggregates.Add(p => p.OrderQty).Count();
                                aggregates.Add(p => p.OrderDate).Count();

                            })

                            .ServerOperation(true)
                            .Read(read => read.Action("GetData", "Home", new {custom="false"}))
                            .PageSize(500)
                                    )
                          .AutoBind(true)

                          )
            </div>
        </div>
    </div>
<script>
    $("#Custom").change(function() {
        var dataSource = $("#Grid").data("kendoGrid").dataSource;
        dataSource.transport.options.read.url = "/Home/GetData?custom=" + $(this).is(":checked");
        dataSource.read();
    })
                </script>
</body>
</html>